plot(y~x, AQ[[4]], axes=F, ann=F)
plot(y~x, AQ[[4]])
plot(y~x, AQ[[4]], type="n")
rect(par('usr')[1], par('usr')[3], par('usr')[2],par('usr')[4], col = 'black')
for(i in 1:4){}
for(i in 1:4){
points(y~x, AQ[[i]], col="white")
}
plot(y~x, AQ[[4]], pch=1)
plot(y~x, AQ[[4]], pch=20)
plot(y~x, AQ[[4]], pch=23)
plot(y~x, AQ[[4]], pch=23, bg="red")
plot(y~x, AQ[[4]], pch=21, bg="red")
plot(y~x, AQ[[4]], pch=21, bg="red", cex=1)
plot(y~x, AQ[[4]], pch=21, bg="red", cex=1.5)
plot(y~x, AQ[[4]], pch=21, bg="red", cex=1.5, type="l")
plot(y~x, AQ[[4]], pch=21, bg="red", cex=1.5, type="b")
plot(y~x, AQ[[4]], pch=21, bg="red", cex=1.5, type="h")
plot(y~x, AQ[[4]], pch=21, bg="red", cex=1.5)
plot(y~jitter(x), AQ[[4]], pch=21, bg="red", cex=1.5)
plot(y~jitter(x), AQ[[4]], pch=21, bg="#33ff0000")
plot(y~jitter(x), AQ[[4]], pch=21, bg="#88ff0000")
plot(y~jitter(x), AQ[[4]], pch=21, bg="#ff000055")
plot(y~jitter(x), AQ[[4]], pch=21, bg="#ff000099")
plot(y~jitter(x), AQ[[4]], pch=21, bg="#ff0000ff")
plot(y~jitter(x), AQ[[4]], pch=21, bg="#ff000000")
plot(y~x, AQ[[4]], pch=21, bg="#ff000055")
plot(y~jitter(x), AQ[[4]], pch=21, bg="#ff000000")
plot(y~x, AQ[[4]], pch=21, bg="#ff000055")
points(y~x, AQ[[4]], pch=21, bg="#ff000055")
points(y~x, AQ[[4]], pch=21, bg="#ff000055")
points(y~x, AQ[[4]], pch=21, bg="#ff000055")
points(y~x, AQ[[4]], pch=21, bg="#ff000055")
points(y~x, AQ[[4]], pch=21, bg="#ff000055")
points(y~x, AQ[[4]], pch=21, bg="#ff000055")
png("test.png")
plot(y~x, AQ[[4]], pch=21, bg="#ff000055")
dev.off()
dev.off()
getwd()
x = seq(0, 1000, .1)
plot(x, dcauchy(x), type="l")
plot(x, dcauchy(x, 0, 5), type="l")
x = seq(0, 100, .1)
plot(x, dcauchy(x, 0, 5), type="l")
plot(x, dcauchy(x, 0, 10), type="l")
plot(x, dcauchy(x, 0, 100), type="l")
plot(x, dcauchy(x, 0, 10), type="l")
library(readr)
chicago2016 <- read_csv("~/Dropbox/upf_criminology/2017/class2/chicago2016.csv")
View(chicago2016)
ggplot() +  geom_point(data=chicago2016, aes(x=Longitude, y=Latitude), color="red")
library(ggplot2)
ggplot() +  geom_point(data=chicago2016, aes(x=Longitude, y=Latitude), color="red")
library(haven)
X2016_ICPS <- read_dta("~/Dropbox/upf_criminology/2017/class2/2016_icps_cast/2016 ICPS.dta")
View(X2016_ICPS)
load("~/Dropbox/upf_criminology/2017/class2/ICPSR_36354/DS0001/36354-0001-Data.rda")
View(da36354.0001)
rm(list(ls))
rm(list=(ls))
rm(list=(ls()))
ls
ls()
sqrt(.5*.5/1150)
sqrt(.5*.5/1150)*1.96
load("~/Dropbox/upf_criminology/2017/class2/ICPSR_36448/DS0004/36448-0004-Data.rda")
View(da36448.0004)
View(da36448.0004)
pv = data.frame(p = c(.253, .208, .237, .233), year=2012:2015)
pv
plot(p~year, data=pv)
pv = data.frame(p = c(.253, .208, .237, .233), year=as.integer(2012:2015))
plot(p~year, data=pv)
pv = data.frame(p = c(.253, .208, .237, .233), year=as.character(2012:2015))
plot(p~year, data=pv)
2012:2015
plot(p~year, data=pv)
pv = data.frame(p = c(.253, .208, .237, .233), year=integer(2012:2015))
pv = data.frame(p = c(.253, .208, .237, .233), year=as.integer(2012:2015))
plot(p~year, data=pv)
plot(p, year, data=pv)
plot(p~year, data=pv)
plot(p~year, data=pv, type="l")
plot(p, data=pv, type="l")
plot(pv$p, type="l")
pv = data.frame(p = c(.201, .256, .248, .242, .253, .208, .237, .233), year=as.integer(2008:2015))
plot(pv$p,pv$year, type="l")
plot(p~year, data=pv, type="l")
library(calibrate)
textxy(pv$year, pv$p, pv$p)
lo = loess(pv$year, pv$p)
lo = loess(p~year, data=pv)
lines(predict(lo), col='red', lwd=2)
plot(p~year, data=pv, type="l")
lines(predict(lo), col='red', lwd=2)
plot(p~year, data=pv, type="n")
lines(predict(lo), col='red', lwd=2)
lines(predict(lo), col='red', lwd=2, add=T)
lo
plot(p~year, data=pv, type="o")
points(p~year, data=pv, pch=23)
plot(p~year, data=pv, type="l")
points(p~year, data=pv, pch=23)
points(p~year, data=pv, pch=20)
plot(p~year, data=pv, type="l")
points(p~year, data=pv, pch=20)
plot(p~year, data=pv, type="l", col="#44005555")
plot(p~year, data=pv, type="l", col="#440055")
plot(p~year, data=pv, type="l", col="#444455")
plot(p~year, data=pv, type="l", col="#444455", lwd=2)
plot(p~year, data=pv, type="l", col="#004455", lwd=2)
plot(p~year, data=pv, type="l", col="#0044dd", lwd=2)
plot(p~year, data=pv, type="l", col="#0045aa", lwd=2)
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3)
points(p~year, data=pv, pch=20, bg=col="#0045aa")
points(p~year, data=pv, pch=20, bg="#0045aa")
points(p~year, data=pv, pch=20, col="#0045aa")
points(p~year, data=pv, pch=20, col="#0045aa")
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3)
points(p~year, data=pv, pch=20, col="#0045aa")
points(p~year, data=pv, pch=20, col="#0045aa", cex=1.3)
points(p~year, data=pv, pch=20, col="#0045aa", cex=1.5)
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3)
points(p~year, data=pv, pch=20, col="#0045aa", cex=1.5)
textxy(pv$year, pv$p, pv$p, cex=2)
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3)
points(p~year, data=pv, pch=20, col="#0045aa", cex=1.5)
textxy(pv$year, pv$p, pv$p, cex=1.3)
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3)
points(p~year, data=pv, pch=20, col="#0045aa", cex=1.5)
textxy(pv$year, pv$p, pv$p, cex=1)
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3, xlim=c(2008, 2016) , ylim=c(0, .3))
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3, xlim=c(2008, 2016) , ylim=c(19, .26))
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3, xlim=c(2008, 2016) , ylim=c(.19, .26))
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3, xlim=c(2008, 2015.5) , ylim=c(.19, .26))
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3, xlim=c(2008, 2016) , ylim=c(.19, .26))
plot(p~year, data=pv, type="l", col="#0045aa", lwd=3, xlim=c(2008, 2016) , ylim=c(.19, .27))
points(p~year, data=pv, pch=20, col="#0045aa", cex=1.5)
textxy(pv$year, pv$p, pv$p, cex=1)
plot(p~year, data=pv, type="l", col="#0045aa88", lwd=3, xlim=c(2008, 2016) , ylim=c(.19, .27))
points(p~year, data=pv, pch=20, col="#0045aa", cex=1.5)
textxy(pv$year, pv$p, pv$p, cex=1)
points(p~year, data=pv, pch=20, col="#0045aa", cex=1.8)
plot(p~year, data=pv, type="l", col="#0045aa88", lwd=3, xlim=c(2008, 2016) , ylim=c(.19, .27))
points(p~year, data=pv, pch=20, col="#0045aa", cex=1.8)
textxy(pv$year, pv$p, pv$p, cex=1)
(.302*(1-.302))
sqrt((.302*(1-.302)/400)*1.96
)
sqrt((.302*(1-.302)/400))
sqrt((.302*(1-.302)/400))*1.96
.302-.045
.302+.045
sqrt((.266*(1-.266)/400))*1.96
.266-.043
.266+.043
ic = data.frame(barri = c("Ciutat Vella", "Sant Marti"), p = c(.302, .266), ll = c(.257, .223), ul = c(.347, .309) )
plot(p~barri, data=ic)
plot(p~barri, data=ic, pch=20)
library(ggplot2)
ggplot(ic, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white")
.302-.266
p = (.302-.266)
ul = p + 1.96*sqrt((.302*(1-.302)/400) + (.266*(1-.266)/400))
ul = p - 1.96*sqrt((.302*(1-.302)/400) + (.266*(1-.266)/400))
ul = p + 1.96*sqrt((.302*(1-.302)/400) + (.266*(1-.266)/400))
ll = p - 1.96*sqrt((.302*(1-.302)/400) + (.266*(1-.266)/400))
ul
ll
icd = data.frame(p = p, ul=ul, ll=ll)
ggplot(icd) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white")
icd = data.frame(p = p, ul=ul, ll=ll, barri="difference")
ggplot(icd, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white")
ggplot(icd, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white") + theme(axis.title.x=element_blank()
ggplot(icd, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white") + theme(axis.title.x=element_blank()
)
ggplot(icd, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white") + theme(axis.title.x=element_blank())
icd = data.frame(p = p, ul=ul, ll=ll, barri="")
ggplot(icd, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white") + theme(axis.title.x=element_blank())
ggplot(icd, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white") + theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank())
ggplot(icd, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white") + theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank()) + geom_hline(yintercept=0)
ggplot(icd, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white") + theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank()) + geom_hline(yintercept=0, lty=2)
ggplot(icd, aes(x=barri, y=p, group=1)) +
geom_errorbar(width=.1, aes(ymin=ll, ymax=ul)) +
geom_point(shape=21, size=3, fill="white") + theme(axis.title.x=element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank()) + geom_hline(yintercept=0, lty=2, col="red")
400*.302
400*.266
as.integer(400*.302)
x1 = as.integer(400*.302)
x2 = as.integer(400*.266)
x1 + x2
(x1 + x2)/800
p = (x1 + x2)/800
p
z = (.302 - .266)/ sqrt(p*(1-p)*(1/400 + 1/400))
z
########################
# R Script for Class 2 #
########################
# t distribution
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("t gl=1", "t gl=3", "t gl=8", "t gl=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Densitat", main="Comparació de les distribucions t i normal")
for (i in 1:4){
lines(x, dt(x,degf[i]), lwd=2, col=colors[i])
}
legend("topright",
labels, lwd=2, lty=c(1, 1, 1, 1, 2), col=colors)
.3*.7
.3*.7/400
########################
# R Script for Class 6 #
########################
# based in part on Germán Rodríguez GLM
# lecture notes and R scripts.
# Rodríguez, G. (2007). Lecture Notes on Generalized Linear Models. URL: http://data.princeton.edu/wws509/notes/
library(stargazer)
library(lavaan)
library(ggplot2)
library(scatterplot3d)
library(rgl)
library(calibrate)
fpe <- read.table("http://data.princeton.edu/wws509/datasets/effort.dat")
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point()
p + geom_point() + geom_smooth(method = "lm", se = TRUE)
pairs(fpe)
M = lm(change~setting+effort, data=fpe)
summary(M)
stargazer(M, type="html")
newdat <- expand.grid(effort=seq(0,35,by=.5),setting=seq(30,90,by=.5))
newdat$change = predict(M, newdata=newdat)
with(fpe,plot3d(effort,setting,change, col="blue", size=1, type="s"))
with(newdat,surface3d(unique(effort),unique(setting),change,alpha=0.3,front="line", back="line"))
writeWebGL(dir="fp_3Dreg", width=1000)
fpe$setting.g = cut(fpe$setting, breaks=c(min(fpe$setting),70,80,max(fpe$setting)), right=FALSE,include.lowest=TRUE,labels=c("Low","Medium","High"))
fpe$effort.g <- cut(fpe$effort, breaks=c(min(fpe$effort),5,15,max(fpe$effort)), right=FALSE, include.lowest=TRUE, labels=c("Weak","Moderate","Strong"))
M2 = lm(change~setting+effort.g, data=fpe)
summary(M2)
stargazer(M2, type="html")
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g))
dev.off()
dev.off()
p + geom_point(aes(colour=effort.g)) + geom_smooth(method = "lm", se = TRUE)
p + geom_point(aes(colour=effort.g)) + geom_line(aes(y=M2))
M2r = data.frame(t(coef(M2)))
M2r
coef(M2)
coef(M2)[1]
M2l = data.frame(intercept = coef(M2)[1], slope=coef(M2)[2]))
M2l = data.frame(intercept = coef(M2)[1], slope=coef(M2)[2])
M2l
M2m = data.frame(intercept = (coef(M2)[1]+coef(M2)[3]), slope=coef(M2)[2])
M2s = data.frame(intercept = (coef(M2)[1]+coef(M2)[4]), slope=coef(M2)[2])
M2r = rbind(M2l, M2m)
M2r
M2r = rbind(M2l, M2m, M2s)
M2r
M2l = data.frame(intercept = coef(M2)[1], slope=coef(M2)[2], effort = "low")
M2m = data.frame(intercept = (coef(M2)[1]+coef(M2)[3]), slope=coef(M2)[2], effort="medium")
M2s = data.frame(intercept = (coef(M2)[1]+coef(M2)[4]), slope=coef(M2)[2], effort = "strong")
M2r = rbind(M2l, M2m, M2s)
M2r
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r, guide=false)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r, guide=FALSE)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort, guide=FALSE), data=M2r)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort, show_guide=FALSE), data=M2r)
p + geom_point(aes(colour=effort.g, show_guide=FALSE)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r)
p + geom_point(aes(colour=effort.g, guide=FALSE)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r)
p + geom_point(aes(colour=effort.g) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r, show.legend=FALSE)
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r, show.legend=FALSE)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r, show.legend=FALSE)
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r, show.legend=FALSE)
p + geom_point(aes(colour=effort.g), show.legend=FALSE) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r)
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g), show.legend=FALSE)
p + geom_point(aes(colour=effort.g), show.legend=FALSE) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r) + guides(colour="legend")
summary(M2)
M2l = data.frame(intercept = coef(M2)[1], slope=coef(M2)[2], effort = "Weak")
M2m = data.frame(intercept = (coef(M2)[1]+coef(M2)[3]), slope=coef(M2)[2], effort="Moderate")
M2s = data.frame(intercept = (coef(M2)[1]+coef(M2)[4]), slope=coef(M2)[2], effort = "Strong")
M2r = rbind(M2l, M2m, M2s)
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r)
M2r
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r) + guides(colour=legend)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r) + guides(colour=legend)
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r) + guides(colour=legend)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r) + guides(colour=guide_legend(effort)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r) + guides(colour=guide_legend(effort)
)
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r) + guides(colour=guide_legend(effort))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, lty=effort), data=M2r) + guides(colour=guide_legend("effort"))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
fpe.g = fpe
fpe.g$setting = cut(fpe$setting, breaks=c(min(fpe$setting),70,80,max(fpe$setting)), right=FALSE,include.lowest=TRUE,labels=c("Low","Medium","High"))
fpe.g$effort <- cut(fpe$effort, breaks=c(min(fpe$effort),5,15,max(fpe$effort)), right=FALSE, include.lowest=TRUE, labels=c("Weak","Moderate","Strong"))
M2 = lm(change~setting+effort, data=fpe.g)
summary(M2)
M2l = data.frame(intercept = coef(M2)[1], slope=coef(M2)[2], effort = "Weak")
M2m = data.frame(intercept = (coef(M2)[1]+coef(M2)[3]), slope=coef(M2)[2], effort="Moderate")
M2s = data.frame(intercept = (coef(M2)[1]+coef(M2)[4]), slope=coef(M2)[2], effort = "Strong")
M2r = rbind(M2l, M2m, M2s)
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g))
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort))
fpe.g = fpe
fpe.g$effort <- cut(fpe$effort, breaks=c(min(fpe$effort),5,15,max(fpe$effort)), right=FALSE, include.lowest=TRUE, labels=c("Weak","Moderate","Strong"))
M2 = lm(change~setting+effort, data=fpe.g)
summary(M2)
M2l = data.frame(intercept = coef(M2)[1], slope=coef(M2)[2], effort = "Weak")
M2m = data.frame(intercept = (coef(M2)[1]+coef(M2)[3]), slope=coef(M2)[2], effort="Moderate")
M2s = data.frame(intercept = (coef(M2)[1]+coef(M2)[4]), slope=coef(M2)[2], effort = "Strong")
M2r = rbind(M2l, M2m, M2s)
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort))
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort))
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort))
ggsave("fp_reg_cat")
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort))
p_cat = p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
pcat = p + geom_point(aes(colour=effort))
p = ggplot(fpe.g, aes(x = setting, y = change))
pcat = p + geom_point(aes(colour=effort))
ggsave("fp_reg_cat", pcat)
ggsave("fp_reg_cat.png")
ggsave("fp_reg_ints.png")
p = ggplot(fpe, aes(x = setting, y = change))
p_cat = p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints.png")
p = ggplot(fpe, aes(x = setting, y = change))
p_cat = p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints.png")
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort))
ggsave("fp_reg_cat.png")
p = ggplot(fpe, aes(x = setting, y = change))
p_cat = p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints.png")
p = ggplot(fpe, aes(x = setting, y = change))
p_cat = p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints.png")
p = ggplot(fpe, aes(x = setting, y = change))
p_cat = p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints.png")
p = ggplot(fpe, aes(x = setting, y = change))
p_cat = p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints.png")
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints.png")
getwd()
setwd("~/Dropbox/upf_global_studies/2017/slides/global_studies_research_methods/images")
setwd('~/Dropbox/upf_global_studies/2017/slides/global_studies_research_methods/images')
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort))
ggsave("fp_reg_cat.png")
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point(aes(colour=effort.g)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints.png")
M3 = lm(change~setting+effort+setting*effort, data=fpe.g)
summary(M3)
summary(M3)
coef(M3)
M3l = data.frame(intercept = coef(M3)[1], slope=coef(M3)[2], effort = "Weak")
M3m = data.frame(intercept = (coef(M3)[1]+coef(M3)[3]), slope=(coef(M2)[2]+coef(M2)[5]), effort="Moderate")
M3s = data.frame(intercept = (coef(M3)[1]+coef(M3)[4]), slope=(coef(M2)[2]+coef(M2)[6]), effort = "Strong")
M3r = rbind(M3l, M3m, M3s)
stargazer(M3, type="html")
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints.png")
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M2r) + guides(colour=guide_legend("effort"))
p + geom_point(aes(colour=effort)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M3r) + guides(colour=guide_legend("effort"))
M3r
M3l = data.frame(intercept = coef(M3)[1], slope=coef(M3)[2], effort = "Weak")
M3m = data.frame(intercept = (coef(M3)[1]+coef(M3)[3]), slope=(coef(M2)[2]+coef(M2)[5]), effort="Moderate")
M3s = data.frame(intercept = (coef(M3)[1]+coef(M3)[4]), slope=(coef(M2)[2]+coef(M2)[6]), effort = "Strong")
M3r = rbind(M3l, M3m, M3s)
M3r
summary(M3)
M3 = lm(change~setting+effort+setting*effort, data=fpe.g)
summary(M3)
M3l = data.frame(intercept = coef(M3)[1], slope=coef(M3)[2], effort = "Weak")
M3m = data.frame(intercept = (coef(M3)[1]+coef(M3)[3]), slope=(coef(M3)[2]+coef(M3)[5]), effort="Moderate")
M3s = data.frame(intercept = (coef(M3)[1]+coef(M3)[4]), slope=(coef(M3)[2]+coef(M3)[6]), effort = "Strong")
M3r = rbind(M3l, M3m, M3s)
M3r
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M3r) + guides(colour=guide_legend("effort"))
ggsave("fp_reg_ints_slopes.png")
M3 = lm(change~setting+effort+setting*effort, data=fpe)
summary(M3)
summary(M3)
stargazer(M3, type="html")
newdat <- expand.grid(effort=seq(0,35,by=.5),setting=seq(30,90,by=.5))
newdat$change = predict(M3, newdata=newdat)
with(fpe,plot3d(effort,setting,change, col="blue", size=1, type="s"))
with(newdat,surface3d(unique(effort),unique(setting),change,alpha=0.3,front="line", back="line"))
writeWebGL(dir="fp_int_3Dreg", width=1000)
getwd()
newdat <- expand.grid(effort=seq(0,35,by=.5),setting=seq(30,90,by=.5))
newdat$change = predict(M, newdata=newdat)
with(fpe,plot3d(effort,setting,change, col="blue", size=1, type="s"))
with(newdat,surface3d(unique(effort),unique(setting),change,alpha=0.3,front="line", back="line"))
writeWebGL(dir="fp_3Dreg", width=1000)
p = ggplot(fpe.g, aes(x = setting, y = change))
p + geom_point(aes(colour=effort)) + geom_abline(aes(intercept=intercept, slope=slope, colour=effort), data=M3r) + guides(colour=guide_legend("effort")) + geom_smooth(method = "lm", se = TRUE)
fpe.gd = fpe
cut(fpe$change, 2)
fpe.gd$change = cut(fpe$change, 2, labels=c("Low","High"))
p = ggplot(fpe.gd, aes(x = setting, y = change))
p + geom_point(aes(colour=effort))
p = ggplot(fpe.gd, aes(x = effort, y = change))
p + geom_point()
fpe$high_change = fpe$change > 20
p = ggplot(fpe, aes(x = effort, y = high_change))
p + geom_point()
glm(high_change~effort, data=fpe, formula = binomial)
glm(high_change~effort, data=fpe, formula = "binomial")
glm(high_change~effort, data=fpe, family = binomial)
glm(high_change~effort, data=fpe, family = binomial(link=logit))
glm(high_change~setting, data=fpe, family = binomial(link=logit))
p = ggplot(fpe, aes(x = setting, y = high_change))
p + geom_point()
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point()
p = ggplot(fpe, aes(x = effort, y = change))
p + geom_point()
M4 = lm(change~effort + effort^2)
M4 = lm(change~effort + effort^2, data=fpe)
summary(M4)
fpe$effort_sq = fpe$effort^2
M4 = lm(change~effort + effort_sq, data=fpe)
summary(M4)
M4 = lm(change~effort + effort_sq + setting, data=fpe)
summary(M4)
summary(M4)
stargazer(M4)
stargazer(M4 type="html")
stargazer(M4, type="html")
formula=y ~ poly(x, 2, raw=TRUE)
formula=y ~ poly(x, 2, raw=TRUE)
p = ggplot(fpe, aes(x = effort, y = change))
p + geom_point() + stat_smooth(method="lm", se=TRUE, fill=NA, formula=y ~ poly(x, 2, raw=TRUE),colour="red")
p + geom_point() + stat_smooth(method="lm", se=TRUE, fill=NA, formula=y ~ poly(x, 2, raw=TRUE))
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point() + stat_smooth(method="lm", se=TRUE, fill=NA, formula=y ~ poly(x, 2, raw=TRUE))
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point()
p + geom_point() + stat_smooth(method="lm", se=TRUE, fill=NA, formula=y ~ poly(x, 2, raw=FALSE))
p + geom_point() + stat_smooth(method="lm", se=TRUE, fill=NA, formula=y ~ poly(x, 2, raw=TRUE))
p + geom_point() + stat_smooth(method="lm", se=TRUE, fill=NA, formula=y ~ poly(x, 2, raw=TRUE), se=TRUE)
p + geom_point() + stat_smooth(method="lm", se=TRUE, fill=NA, formula=y ~ poly(x, 2, raw=TRUE))
p + geom_point() + stat_smooth(method="lm", se=TRUE, fill="grey", formula=y ~ poly(x, 2, raw=TRUE))
p + geom_point()
p + geom_point() + geom_smooth(method = "lm", se = TRUE)
fpe$setting_sq = fpe$setting^2
M4 = lm(change~setting + setting_sq, data=fpe)
summary(M4)
stargazer(M4, type="html")
M40 = lm(change~setting, data=fpe)
summary(M40)
stargazer(M40, M4, type="html")
p = ggplot(fpe, aes(x = setting, y = change))
p + geom_point() + stat_smooth(method="lm", se=TRUE, fill="grey", formula=y ~ poly(x, 2, raw=TRUE))
ggsave("fp_reg_quad.png")
